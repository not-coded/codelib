plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'com.modrinth.minotaur' version '2.+'
	id 'maven-publish'
}

version = project.mod_version + "+" + project.minecraft_version.substring(0, 4)
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withJavadocJar()
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
		gpr(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/not-coded/codelib")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
			}
		}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "codelib"
	versionNumber = "${project.version}"
	versionName = "v${project.version}".substring(0, 6) + " | ${project.minecraft_version}"
	versionType = "release"
	uploadFile = remapJar
	additionalFiles.add(javadocJar)
	additionalFiles.add(sourcesJar)
	gameVersions.add(minecraft_version)
	loaders.add("fabric")
	loaders.add("quilt")
	changelog = "### Read https://github.com/not-coded/codelib/releases/tag/${project.version}."
}